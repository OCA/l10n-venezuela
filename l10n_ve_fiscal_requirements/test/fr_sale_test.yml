-
  2. Fiscal requirements sale tests
-
  2.1 In order to test fiscal requirements I create a new customer sale invoice with tax
-
  !record {model: account.invoice, id: test_fr01}:
    type: out_invoice
    company_id: base.main_company
    currency_id: base.EUR
    date_invoice: !eval time.strftime('%Y-%m-%d')
    account_id: account.a_recv
    invoice_line:
      - product_id: product.product_product_3
        quantity: 5
        uos_id: product.product_uom_unit
        price_unit: 20
        name: Fiscal Requirements Sale Invoice
        account_id: account.a_sale
        invoice_line_tax_id:
        - iva_sale1
    journal_id: account.sales_journal
    partner_id: f_req_partner_2
    reference_type: none
-
  2.2 I check that Initially customer invoice is in the "Draft" state
-
  !assert {model: account.invoice, id: test_fr01}:
    - state == 'draft'
-
  2.3 I change the state of invoice to "Proforma2" by clicking PRO-FORMA button
-
  !workflow {model: account.invoice, action: invoice_proforma2, ref: test_fr01}
-
  2.4 I check that the invoice state is now "Proforma2"
-
  !assert {model: account.invoice, id: test_fr01}:
    - state == 'proforma2'
-
  2.5 I create invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: test_fr01}
-
  2.6 I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: test_fr01, string: Invoice is not in open state}:
    - state == 'open'
-
  2.7 I check that the invoice has taxes
-
  !python {model: account.invoice}: |
    inv_brw = self.browse(cr, uid, ref('test_fr01'))
    assert inv_brw.tax_line, 'There should be tax lines in this invoive'
