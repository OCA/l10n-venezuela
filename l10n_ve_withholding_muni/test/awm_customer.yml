-
  In order to test account withholding I create a new customer invoice
-
  I set the context that will be used for the encoding of all the invoices of this file
-
  !context
    'type': 'out_invoice'
-
  I create a customer invoice
-
  !record {model: account.invoice, id: account_invoice_customer0, view: account.invoice_form }:
    name: '0 yaml test account invoice customer 0'
    account_id: account.a_recv
    company_id: base.main_company
    currency_id: base.EUR
    invoice_line:
      - account_id: account.a_sale
        name: 'Test product description'
        price_unit: 25.0
        product_id: product.product_product_3
        quantity: 100.0
        uos_id: product.product_uom_unit
    journal_id: account.sales_journal
    partner_id: l10n_ve_fiscal_requirements.f_req_partner_6 
    reference_type: none
    type: 'out_invoice'
-
  I check that Initially customer invoice state is "Draft"
-
  !assert {model: account.invoice, id: account_invoice_customer0}:
    - state == 'draft'
-
  I check that the customer invoice is a "Customer Invoice"
-
  !assert {model: account.invoice, id: account_invoice_customer0, string: This is not a customer invoice}:
    - type == 'out_invoice'
-
  I change the state of invoice to open by clicking Validate button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_customer0}
-
  I check that the invoice state is now "Open"
-
  !assert {model: account.invoice, id: account_invoice_customer0}:
    - state == 'open'
-
  I create a customer withholding muni without wh lines
-
  !record {model: account.wh.munici, id: account_wh_customer01, view: l10n_ve_withholding_muni.view_wh_muni_form}: &awm_01
    name: '0 yaml test account withholding customer 0'
    account_id: account.a_pay
    company_id: base.main_company
    currency_id: base.EUR
    journal_id: wh_purchase_journal
    partner_id: l10n_ve_fiscal_requirements.f_req_partner_6 
    type: 'out_invoice'
    number: '1122334455'
-
  I  change the state of muni withholding to Confirmed by clicking Confirmed button
-
  !python {model: account.wh.munici}: |
    from openerp.osv import osv
    awm_id = ref('account_wh_customer01')
    awm_brw = self.browse(cr, uid, awm_id)
    try:
      awm_brw.confirm_check()
    except osv.except_osv:
      pass
-
  I check that the muni withholding state remains in Draft state
-
  !assert {model: account.wh.munici, id: account_wh_customer01}:
    - state == 'draft'
-
  I create a customer withholding muni with wh lines
-
  !record {model: account.wh.munici, id: account_wh_customer02, view: l10n_ve_withholding_muni.view_wh_muni_form}: 
    partner_id: l10n_ve_fiscal_requirements.f_req_partner_1 
    number: '0102030405'
    munici_line_ids:
      - name: 'Test munici wh line'
        invoice_id: account_invoice_customer0
        wh_loc_rate: 100.0
        amount: 200.0
    <<: *awm_01
-
  I change the state of muni withholding to Confirmed by clicking Confirmed button
-
  !workflow {model: account.wh.munici, action: wh_muni_confirmed, ref: account_wh_customer02}
-
  I check that the muni withholding state change to Confirmed state
-
  !assert {model: account.wh.munici, id: account_wh_customer02}:
    - state == 'confirmed'
-
  I change the state of muni withholding to Done by clicking Done button
-
  !workflow {model: account.wh.munici, action: wh_muni_done, ref: account_wh_customer02}
-
  I check that the muni withholding state change to Done state
-
  !assert {model: account.wh.munici, id: account_wh_customer02}:
    - state == 'done'

